on:
  push:
    branches:
      - main
name: Run Release Please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name:
        run: |
          echo ${{secrets.GITHUB_TOKEN}} | md5sum
      - uses: googleapis/release-please-action@v3
        id: release
        with:
          command: manifest
          token: ${{secrets.GITHUB_TOKEN}}

      # The logic below handles the npm publication:
      - name: Checkout Repository
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        if: ${{ steps.release.outputs.releases_created }}
        with:
          node-version: 14
          registry-url: "https://registry.npmjs.org"

      # Release Please has already incremented versions and published tags, so we just
      # need to publish all unpublished versions to NPM here
      # See: https://github.com/lerna/lerna/tree/main/commands/publish#bump-from-package
      - name: Publish to NPM
        if: ${{ steps.release.outputs.releases_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: npx lerna publish from-package --no-push --no-private --yes

      - name: Show details
        run: |
          echo packages/d
          echo ${{steps.release.outputs['packages/d--release_created']}}
          echo ${{steps.release.outputs['packages/d--upload_url']}}
          echo ${{steps.release.outputs['packages/d--html_url']}}
          echo ${{steps.release.outputs['packages/d--tag_name']}}
          echo ${{steps.release.outputs['packages/d--major']}}
          echo ${{steps.release.outputs['packages/d--minor']}}
          echo ${{steps.release.outputs['packages/d--patch']}}
          echo ${{steps.release.outputs['packages/d--sha']}}

          echo packages/c
          echo ${{steps.release.outputs['packages/c--release_created']}}
          echo ${{steps.release.outputs['packages/c--upload_url']}}
          echo ${{steps.release.outputs['packages/c--html_url']}}
          echo ${{steps.release.outputs['packages/c--tag_name']}}
          echo ${{steps.release.outputs['packages/c--major']}}
          echo ${{steps.release.outputs['packages/c--minor']}}
          echo ${{steps.release.outputs['packages/c--patch']}}
          echo ${{steps.release.outputs['packages/c--sha']}}

          echo packages/b
          echo ${{steps.release.outputs['packages/b--release_created']}}
          echo ${{steps.release.outputs['packages/b--upload_url']}}
          echo ${{steps.release.outputs['packages/b--html_url']}}
          echo ${{steps.release.outputs['packages/b--tag_name']}}
          echo ${{steps.release.outputs['packages/b--major']}}
          echo ${{steps.release.outputs['packages/b--minor']}}
          echo ${{steps.release.outputs['packages/b--patch']}}
          echo ${{steps.release.outputs['packages/b--sha']}}

          echo packages/a
          echo ${{steps.release.outputs['packages/a--release_created']}}
          echo ${{steps.release.outputs['packages/a--upload_url']}}
          echo ${{steps.release.outputs['packages/a--html_url']}}
          echo ${{steps.release.outputs['packages/a--tag_name']}}
          echo ${{steps.release.outputs['packages/a--major']}}
          echo ${{steps.release.outputs['packages/a--minor']}}
          echo ${{steps.release.outputs['packages/a--patch']}}
          echo ${{steps.release.outputs['packages/a--sha']}}

          echo __
          echo ${{steps.release.outputs.release_created}}
          echo ${{steps.release.outputs.upload_url}}
          echo ${{steps.release.outputs.html_url}}
          echo ${{steps.release.outputs.tag_name}}
          echo ${{steps.release.outputs.major}}
          echo ${{steps.release.outputs.minor}}
          echo ${{steps.release.outputs.patch}}
          echo ${{steps.release.outputs.sha}}
